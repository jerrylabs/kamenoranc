{"version":3,"file":"component---src-pages-404-js-b797f40447310f73a4a7.js","mappings":"uJAmCA,IAhCeA,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAUH,EAC3C,MACMI,EADcC,iBACDJ,EAASK,SAC5B,IAAIC,EAgBJ,OAbEA,EADEH,EAEAI,EAAAA,cAAA,MAAIC,UAAU,gBACZD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,KAAKT,IAKhBM,EAAAA,cAACE,EAAAA,KAAI,CAACD,UAAU,mBAAmBE,GAAG,KACnCT,GAMLM,EAAAA,cAAA,OAAKC,UAAU,iBAAiB,oBAAmBL,GACjDI,EAAAA,cAAA,UAAQC,UAAU,iBAAiBF,GACnCC,EAAAA,cAAA,YAAOL,GACPK,EAAAA,cAAA,cAAQ,MACH,IAAII,MAAOC,cAAc,eAC5B,IACAL,EAAAA,cAAA,KAAGM,KAAK,4BAA2B,WAEjC,C,+CCkBV,IAvCYd,IAAuC,IAADe,EAAAC,EAAAC,EAAA,IAArC,YAAEC,EAAW,MAAEhB,EAAK,SAAEC,GAAUH,EAC3C,MAAM,KAAEmB,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApBR,EAAGI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBb,MAExC,OACEM,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQe,EAAkBrB,EAAK,MAAMqB,EAAiBrB,GACtDM,EAAAA,cAAA,QAAMgB,KAAK,cAAcC,QAASJ,IAClCb,EAAAA,cAAA,QAAMkB,SAAS,WAAWD,QAASvB,IACnCM,EAAAA,cAAA,QAAMkB,SAAS,iBAAiBD,QAASJ,IACzCb,EAAAA,cAAA,QAAMkB,SAAS,UAAUD,QAAQ,YACjCjB,EAAAA,cAAA,QAAMgB,KAAK,eAAeC,QAAQ,YAClCjB,EAAAA,cAAA,QACEgB,KAAK,kBACLC,SAA0B,QAAjBT,EAAAG,EAAKG,oBAAY,IAAAN,GAAQ,QAARC,EAAjBD,EAAmBW,cAAM,IAAAV,OAAR,EAAjBA,EAA2BW,UAAO,KAE7CpB,EAAAA,cAAA,QAAMgB,KAAK,gBAAgBC,QAASvB,IACpCM,EAAAA,cAAA,QAAMgB,KAAK,sBAAsBC,QAASJ,IACzClB,EACA,C,kGCvCP,MAWa0B,EAAOA,IAAMrB,EAAAA,cAACsB,EAAAA,EAAG,CAAC5B,MAAM,mBAErC,UAbqBF,IAAyB,IAAxB,KAAE+B,EAAI,SAAE9B,GAAUD,EACtC,MAAMgC,EAAYD,EAAKZ,KAAKG,aAAapB,MAEzC,OACEM,EAAAA,cAACyB,EAAAA,EAAM,CAAChC,SAAUA,EAAUC,MAAO8B,GACjCxB,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,2DACI,C","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">{header}</header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        Â© {new Date().getFullYear()}, Built with\r\n        {` `}\r\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst NotFoundPage = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <h1>404: Not Found</h1>\r\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"404: Not Found\" />\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["_ref","location","title","children","isRootPath","__PATH_PREFIX__","pathname","header","React","className","Link","to","Date","getFullYear","href","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","Head","Seo","data","siteTitle","Layout"],"sourceRoot":""}